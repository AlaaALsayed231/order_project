// <auto-generated />
using System;
using EF_final_Project.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_final_Project.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_final_Project.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditLimit")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<int>("SalesRepEmployeeNum")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SalesRepEmployeeNum");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address1 = "456 Oak St",
                            City = "Los Angeles",
                            Country = "USA",
                            CreditLimit = 5000,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Phone = "987-654-3210",
                            PostalCode = 90001,
                            SalesRepEmployeeNum = 1,
                            State = "CA"
                        },
                        new
                        {
                            ID = 2,
                            Address1 = "789 Maple Ave",
                            City = "Chicago",
                            Country = "USA",
                            CreditLimit = 7000,
                            FirstName = "Mike",
                            LastName = "Johnson",
                            Phone = "555-123-4567",
                            PostalCode = 60601,
                            SalesRepEmployeeNum = 2,
                            State = "IL"
                        });
                });

            modelBuilder.Entity("EF_final_Project.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeCode")
                        .HasColumnType("int");

                    b.Property<int?>("reportTo")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OfficeCode");

                    b.HasIndex("reportTo");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "alice@example.com",
                            FirstName = "Alice",
                            JobTitle = "CEO",
                            LastName = "Smith",
                            OfficeCode = 1
                        },
                        new
                        {
                            ID = 2,
                            Email = "bob@example.com",
                            FirstName = "Bob",
                            JobTitle = "Manager",
                            LastName = "Johnson",
                            OfficeCode = 1,
                            reportTo = 1
                        },
                        new
                        {
                            ID = 3,
                            Email = "charlie@example.com",
                            FirstName = "Charlie",
                            JobTitle = "Engineer",
                            LastName = "Brown",
                            OfficeCode = 2,
                            reportTo = 2
                        });
                });

            modelBuilder.Entity("EF_final_Project.Models.Office", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Address1 = "123 Main St",
                            City = "New York",
                            Country = "USA",
                            Phone = "123456",
                            PostalCode = 10001,
                            State = "NY",
                            Territory = "North East"
                        },
                        new
                        {
                            Code = 2,
                            Address1 = "456 Queen St",
                            City = "London",
                            Country = "UK",
                            Phone = "789101",
                            PostalCode = 20002,
                            Territory = "North East"
                        },
                        new
                        {
                            Code = 3,
                            Address1 = "789 Sunset Blvd",
                            City = "Los Angeles",
                            Country = "USA",
                            Phone = "987654",
                            PostalCode = 90001,
                            State = "CA",
                            Territory = "West Coast"
                        });
                });

            modelBuilder.Entity("EF_final_Project.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReqiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CustomerID = 1,
                            OrderDate = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReqiredDate = new DateTime(2024, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShippedDate = new DateTime(2024, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            ID = 2,
                            CustomerID = 2,
                            OrderDate = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReqiredDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShippedDate = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        });
                });

            modelBuilder.Entity("EF_final_Project.Models.OrderProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("PriceEach")
                        .HasColumnType("int");

                    b.Property<int>("ProductCode")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductCode");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            OrderID = 1,
                            PriceEach = 599,
                            ProductCode = 1,
                            Qty = 2
                        },
                        new
                        {
                            ID = 2,
                            OrderID = 1,
                            PriceEach = 999,
                            ProductCode = 2,
                            Qty = 1
                        },
                        new
                        {
                            ID = 3,
                            OrderID = 2,
                            PriceEach = 199,
                            ProductCode = 3,
                            Qty = 1
                        });
                });

            modelBuilder.Entity("EF_final_Project.Models.Payment", b =>
                {
                    b.Property<int>("CheckNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckNum"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CutomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CheckNum");

                    b.HasIndex("CutomerID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EF_final_Project.Models.Product", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("decimal(19,2)");

                    b.Property<string>("MSRP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdtDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductlnID")
                        .HasColumnType("int");

                    b.Property<int>("QlylnStock")
                        .HasColumnType("int");

                    b.Property<int?>("Scale")
                        .HasColumnType("int");

                    b.Property<string>("Vender")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("ProductlnID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            BuyPrice = 1.50m,
                            MSRP = "2.00",
                            Name = "Apple",
                            PdtDescription = "Organic red apples",
                            ProductlnID = 3,
                            QlylnStock = 200,
                            Scale = 1,
                            Vender = "FreshFarms"
                        },
                        new
                        {
                            Code = 2,
                            BuyPrice = 2.50m,
                            MSRP = "3.50",
                            Name = "Bread",
                            PdtDescription = "Whole wheat bread loaf",
                            ProductlnID = 3,
                            QlylnStock = 150,
                            Scale = 1,
                            Vender = "BakersBest"
                        },
                        new
                        {
                            Code = 3,
                            BuyPrice = 3.00m,
                            MSRP = "4.00",
                            Name = "Milk",
                            PdtDescription = "1L fresh milk",
                            ProductlnID = 3,
                            QlylnStock = 100,
                            Scale = 1,
                            Vender = "DairyFarm"
                        },
                        new
                        {
                            Code = 4,
                            BuyPrice = 1500m,
                            MSRP = "2000",
                            Name = "Laptop",
                            PdtDescription = "High-performance laptop",
                            ProductlnID = 1,
                            QlylnStock = 10,
                            Scale = 5,
                            Vender = "Dell"
                        },
                        new
                        {
                            Code = 5,
                            BuyPrice = 800m,
                            MSRP = "1200",
                            Name = "Phone",
                            PdtDescription = "Latest smartphone",
                            ProductlnID = 2,
                            QlylnStock = 25,
                            Scale = 3,
                            Vender = "Samsung"
                        });
                });

            modelBuilder.Entity("EF_final_Project.Models.ProductLine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DesclnHTML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesclnText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProductLines");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DesclnHTML = "<b>Electronics</b>",
                            DesclnText = "Electronics",
                            Image = "electronics.jpg"
                        },
                        new
                        {
                            ID = 2,
                            DesclnHTML = "<b>Mobile Devices</b>",
                            DesclnText = "Mobile Devices",
                            Image = "mobile.jpg"
                        },
                        new
                        {
                            ID = 3,
                            DesclnHTML = "<b>Food Products</b>",
                            DesclnText = "Food",
                            Image = "food.jpg"
                        },
                        new
                        {
                            ID = 4,
                            DesclnHTML = "<b>Home Appliances</b>",
                            DesclnText = "Appliances",
                            Image = "appliances.jpg"
                        });
                });

            modelBuilder.Entity("EF_final_Project.Models.Customer", b =>
                {
                    b.HasOne("EF_final_Project.Models.Employee", "Employee")
                        .WithMany("Customers")
                        .HasForeignKey("SalesRepEmployeeNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EF_final_Project.Models.Employee", b =>
                {
                    b.HasOne("EF_final_Project.Models.Office", "office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_final_Project.Models.Employee", "Manager")
                        .WithMany("ManagedEmployees")
                        .HasForeignKey("reportTo");

                    b.Navigation("Manager");

                    b.Navigation("office");
                });

            modelBuilder.Entity("EF_final_Project.Models.Order", b =>
                {
                    b.HasOne("EF_final_Project.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EF_final_Project.Models.OrderProduct", b =>
                {
                    b.HasOne("EF_final_Project.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_final_Project.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EF_final_Project.Models.Payment", b =>
                {
                    b.HasOne("EF_final_Project.Models.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CutomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EF_final_Project.Models.Product", b =>
                {
                    b.HasOne("EF_final_Project.Models.ProductLine", "ProductLine")
                        .WithMany("Products")
                        .HasForeignKey("ProductlnID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductLine");
                });

            modelBuilder.Entity("EF_final_Project.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EF_final_Project.Models.Employee", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("ManagedEmployees");
                });

            modelBuilder.Entity("EF_final_Project.Models.Office", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EF_final_Project.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("EF_final_Project.Models.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("EF_final_Project.Models.ProductLine", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
